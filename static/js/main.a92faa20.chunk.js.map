{"version":3,"sources":["services/Wordpress.js","component/ModalRegister.js","actioncreator/index.js","component/LastTampol.js","component/Footer.js","component/ModalWejangan.js","App.js","serviceWorker.js","reducer/index.js","index.js"],"names":["server","process","register","params","a","request","Axios","method","data","url","Promise","resolve","tampols","recently","readWejangan","addWejangan","ModalRegister","props","checkingEmail","email","localStorage","getItem","setState","show","logedIn","sla","createSession","Wordpress","code","setItem","inputUser","handleClose","responseGoogle","googleUser","profile","getBasicProfile","name","getName","profile_picture","getImageUrl","getEmail","token_id","getId","state","this","Modal","backdrop","id","onHide","Body","className","clientId","buttonText","onSuccess","onFailure","cookiePolicy","href","React","Component","connect","type","payload","LastTampol","style","paddingTop","map","v","i","key","post_title","post_date_gmt","Footer","ModalWejangan","show_read","show_add","show_after","openRead","e","list_wejangan","openAdd","submitWejangan","wejangan","draft_wejangan","p","s","console","log","ButtonGroup","Button","onClick","variant","Header","closeButton","Title","ListGroup","Item","post_content","onKeyUp","target","value","App","enterName","enemies_name","enterLink","enemies_img","slap","play","bounce","Bounce","Audio","audioUrl","translate","from","x","y","to","duration","scale","applyTo","document","querySelectorAll","lastSlap","slapCount","handImageDisplay","songVideo","quoteStyle","default_img","user","user_email","changeImage","preventDefault","reader","FileReader","files","file","onloadend","result","readAsDataURL","slapImg","userName","getRecently","then","display","displayRegister","alt","src","htmlFor","accept","onChange","placeholder","undefined","Boolean","window","location","hostname","match","reducer","combineReducers","lastdata","ReactDOM","render","store","createStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a92faa20.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst server = process.env.REACT_APP_SERVER\r\n\r\nexport const register = async (params)=>{\r\n    let request = Axios({\r\n        method : \"POST\",\r\n        data : params, \r\n        url : server +'/wp-json/rest-user/register'\r\n    })\r\n\r\n    return Promise.resolve(request)\r\n}\r\n\r\nexport const tampols = async (params)=>{\r\n    let request = Axios({\r\n        method : \"POST\",\r\n        data : params, \r\n        url : server +'/wp-json/rest-user/tampols'\r\n    })\r\n\r\n    return Promise.resolve(request)\r\n}\r\n\r\nexport const recently = async ()=>{\r\n    let request = Axios({\r\n        method : \"GET\",\r\n        url : server +'/wp-json/tampol-online/recently-got-tampols'\r\n    })\r\n\r\n    return Promise.resolve(request)\r\n}\r\n\r\nexport const readWejangan = async ()=>{\r\n    let request = Axios({\r\n        method : \"GET\",\r\n        url : server +'/wp-json/tampol-online/read-wejangan'\r\n    })\r\n\r\n    return Promise.resolve(request)\r\n}\r\n\r\n\r\nexport const addWejangan = async (params)=>{\r\n    let request = Axios({\r\n        method : \"POST\",\r\n        data : params, \r\n        url : server +'/wp-json/tampol-online/add-wejangan'\r\n    })\r\n\r\n    return Promise.resolve(request)\r\n}","import  React  from 'react'\r\nimport {Modal} from 'react-bootstrap'\r\n// import FacebookLogin from 'react-facebook-login'\r\nimport GoogleLogin from 'react-google-login';\r\nimport * as Wordpress from '../services/Wordpress.js'\r\nimport {connect} from 'react-redux'\r\nimport {inputUser} from '../actioncreator'\r\n\r\n\r\n\r\nclass ModalRegister extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={\r\n      show : true,\r\n      logedIn: false,\r\n      sla : ''\r\n    }\r\n  }\r\n\r\n \r\n\r\n  componentDidMount(){\r\n    this.checkingEmail()\r\n  }\r\n\r\n  checkingEmail = ()=> {\r\n    let email = localStorage.getItem(\"email\")\r\n    if(email===null){\r\n      this.setState({\r\n        show : true,\r\n        logedIn: false,\r\n        sla : process.env.REACT_APP_SLA\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        show : false,\r\n        logedIn: true,\r\n        sla : process.env.REACT_APP_SLA\r\n      })\r\n      this.createSession(email)\r\n    }\r\n  }\r\n  \r\n  createSession= async (email)=>{\r\n    let register = await Wordpress.register({\r\n      email : email,\r\n    })\r\n\r\n    if(register.data.code === 1000){\r\n      this.setState({\r\n          logedIn : true, \r\n          show: false\r\n      })\r\n    }\r\n    await localStorage.setItem(\"email\",email)\r\n    this.props.inputUser(register.data.data)\r\n  }\r\n  handleClose = () => {\r\n    this.setState({\r\n      show : false,\r\n    })\r\n  };\r\n  \r\n  responseGoogle = async (googleUser)=>{\r\n    let profile = googleUser.getBasicProfile()\r\n    let register = await Wordpress.register({\r\n      name  : profile.getName(),\r\n      profile_picture : profile.getImageUrl(),\r\n      email : profile.getEmail(),\r\n      token_id :profile.getId()\r\n    })\r\n\r\n    if(register.data.code === 1000){\r\n      this.setState({\r\n          logedIn : true, \r\n          show: false\r\n      })\r\n    }\r\n    await localStorage.setItem(\"email\",profile.getEmail())\r\n    this.props.inputUser(register.data.data)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Modal backdrop={'static'} id=\"register-modal\" show={this.state.show} onHide={this.handleClose}>\r\n        \r\n          <Modal.Body>\r\n              <div>\r\n                <h5> Login \"Tampol Online\" </h5>\r\n\r\n                <div className=\"form-group group-register\">\r\n            \r\n                <GoogleLogin\r\n                    className=\"btn-block btn-primary\"\r\n                    clientId=\"1065136493014-ql91q7uefodnpjcholluphl1353pq4dp.apps.googleusercontent.com\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess={this.responseGoogle}\r\n                    onFailure={this.responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n            \r\n               \r\n\r\n            \r\n                  <p className=\"group-register text-center\">\r\n                    Degan login saya menyetujui \r\n                    <a href={this.state.sla}> Term And Sevices </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\nconst mapStateToProps = (state)=>{\r\n  return state\r\n}\r\nexport default connect(mapStateToProps,{inputUser})(ModalRegister)","\r\n\r\nexport const inputUser = (params)=>{\r\n    return {\r\n        type : 'USER',\r\n        payload : params\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function LastTampol(props){\r\n    \r\n   return (\r\n    <div style={{paddingTop:\"20px\"}}>\r\n        <p className=\"text-center\"> Recently got \"tampol\"</p>\r\n        <ul className=\"list-group list-group-flush\">\r\n            {props.data.map((v,i)=>\r\n                <li className=\"list-group-item\" key={i}>\r\n                     {v.post_title} @ {v.post_date_gmt}\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </div>\r\n   )\r\n   \r\n}","import React from 'react'\r\n\r\n\r\nexport default function Footer(){\r\n    return(\r\n        <div className=\"row text-center\">\r\n             \r\n              <div className=\"navbar text-white fixed-bottom navbar-expand-sm navbar-dark bg-dark\">\r\n          \r\n              Tampolin - 2019 by  :  \r\n                <a href=\"https://www.youtube.com/agitnaeta\"> @agitnaeta </a>\r\n               \r\n              </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Modal, Button, ButtonGroup, ListGroup} from 'react-bootstrap'\r\nimport * as Wordpress from '../services/Wordpress'\r\n\r\n\r\nclass ModalWejangan extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show_read: false,\r\n            show_add  : false,\r\n            show_after: false,\r\n            list_wejangan : [],\r\n            draft_wejangan: false\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(p,s){\r\n            console.log(s)\r\n    }\r\n\r\n    handleClose=()=>{\r\n        this.setState({\r\n            show_read : false,\r\n            show_add : false,\r\n            show_after : false,\r\n        })      \r\n    }\r\n    openRead = async (e) =>{\r\n        this.setState({\r\n            show_read : true,\r\n            show_add : false,\r\n            show_after: false,\r\n        })\r\n\r\n        let request = await Wordpress.readWejangan();\r\n        this.setState({\r\n            list_wejangan : request.data\r\n        })\r\n    }\r\n    openAdd = (e) =>{\r\n        this.setState({\r\n            show_read : false,\r\n            show_add : true,\r\n            show_after: false,\r\n        })\r\n    }\r\n\r\n    submitWejangan= async ()=>{\r\n        await Wordpress.addWejangan({\r\n            wejangan : this.state.draft_wejangan,\r\n            email : localStorage.getItem(\"email\")\r\n        })\r\n        this.setState({\r\n            show_read : false,\r\n            show_add : false,\r\n            show_after: true,\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n          <>\r\n            <div>\r\n                <div className=\"d-flex flex-column\">\r\n                    <ButtonGroup>\r\n                        <Button \r\n                        onClick={this.openRead} \r\n                        variant=\"info\"> Read Wejangan\r\n                    </Button>\r\n                    <Button \r\n                        onClick={this.openAdd}\r\n                        variant=\"success\"\r\n                    > \r\n                        Add Wejangan\r\n                    </Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n\r\n\r\n\r\n                <Modal \r\n                        backdrop={'static'} \r\n                       \r\n                        show={this.state.show_read} \r\n                        onHide={this.handleClose}\r\n                >\r\n                 <Modal.Header closeButton>\r\n                    <Modal.Title>Read Wejangan</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n               \r\n                <ListGroup variant=\"flush\">\r\n                    {this.state.list_wejangan.map((v,i)=>\r\n                     <ListGroup.Item key={i}>\r\n                         {v.post_content}\r\n                     </ListGroup.Item>\r\n                    )}\r\n                </ListGroup>\r\n                </Modal.Body>\r\n                </Modal>\r\n\r\n                    {/* End OF REAd */}\r\n\r\n                <Modal \r\n                        backdrop={'static'} \r\n                       \r\n                        show={this.state.show_add} \r\n                        onHide={this.handleClose}\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title> Add your \"Wejangan\"</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                        <textarea \r\n                        onKeyUp={(e)=>this.setState({draft_wejangan: e.target.value})} \r\n                        className=\"form-control\"></textarea>\r\n                        <br></br>\r\n                        <p>\r\n                        <Button onClick={this.submitWejangan} className=\"btn-block\" variant=\"primary\">\r\n                            Submit Your Wejangan\r\n                        </Button>\r\n                        </p>\r\n                </Modal.Body>\r\n                </Modal>\r\n\r\n\r\n                <Modal \r\n                        backdrop={'static'} \r\n                  \r\n                        show={this.state.show_after} \r\n                        onHide={this.handleClose}\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title> Add your \"Wejangan\"</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Your \"wejangan\" will review by admin, and posted soon. Thanks for help :)\r\n                    </p>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = state =>{\r\n    return state\r\n}\r\nexport default connect(stateToProps)(ModalWejangan)","import React from 'react';\r\nimport './App.css';\r\nimport * as Bounce from 'bounce.js'\r\nimport ModalRegister from './component/ModalRegister';\r\nimport {connect} from 'react-redux'\r\nimport * as Wordpress from './services/Wordpress.js'\r\nimport Peacefull from './component/Peacefull';\r\nimport LastTampol from './component/LastTampol';\r\nimport Footer from './component/Footer';\r\nimport ModalWejangan from './component/ModalWejangan';\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      play : false,\r\n      audioUrl :'', \r\n      slapImg : '',\r\n      slapCount : 0,\r\n      enemies_name :'',\r\n      enemies_img :'',\r\n      songVideo:'',\r\n      quoteStyle:'',\r\n      handImageDisplay : '',\r\n      userName : false,\r\n      recently :[]\r\n    }\r\n  }\r\n\r\n\r\n  static getDerivedStateFromProps(props,state){\r\n     \r\n      if(props.user.data !== undefined){\r\n        state.userName  = 'Tampoled by: '+props.user.data.user_email \r\n        return state\r\n      }\r\n      return true\r\n  }\r\n\r\n\r\n\r\n  componentDidMount(){\r\n\r\n   \r\n    this.setState({\r\n      audioUrl : process.env.REACT_APP_SRC +\"/slap.wav\",\r\n      slapImg : process.env.REACT_APP_SRC +\"/slap.png\",\r\n      enemies_img :'https://www.w3schools.com/bootstrap4/img_avatar3.png',\r\n      default_img : 'https://www.w3schools.com/bootstrap4/img_avatar3.png',\r\n      quoteStyle : 'none',\r\n      handImageDisplay : 'none',\r\n      enemies_name :'Click Image For \"Tampol\"',\r\n      userName : '',\r\n      recently :[],\r\n    })\r\n    this.getRecently()\r\n    \r\n  }\r\n\r\n  getRecently(){\r\n      Wordpress.recently().then((data)=>{\r\n       this.setState({\r\n          recently:data.data\r\n       })\r\n      })\r\n\r\n  }\r\n  \r\n  enterName = (e)=>{\r\n    this.setState({\r\n      enemies_name : e.target.value\r\n    })\r\n  }\r\n  enterLink = (e) =>{\r\n    this.setState({\r\n      enemies_img : e.target.value\r\n    })\r\n  }\r\n  slap =()=> {\r\n      this.setState({\r\n        play : true\r\n      })\r\n      let bounce = new Bounce();\r\n      let audio = new Audio(this.state.audioUrl)\r\n      audio.play()\r\n      bounce.translate({\r\n        from: { x: -300, y: 50 },\r\n        to: { x: 0, y: 0 },\r\n        duration : 50,\r\n      })\r\n      .scale({\r\n        from  : {x:1 ,y:5},\r\n        to  : {x:1,y:1},\r\n      })\r\n      .applyTo(document.querySelectorAll(\".animation-target\"));\r\n      let lastSlap = this.state.slapCount ;\r\n\r\n      this.setState({\r\n          slapCount : lastSlap+1\r\n      })\r\n      if(this.state.slapCount > -1){\r\n          this.setState({\r\n            handImageDisplay : 'block'\r\n          })\r\n      }\r\n      if(this.state.slapCount > 30){\r\n        this.setState({\r\n          songVideo:  \"https://www.youtube.com/embed/91dhAgsc01M?autoplay=1\",\r\n          quoteStyle : 'block'\r\n        })\r\n      }\r\n\r\n      if(this.state.slapCount === 1 && \r\n          (this.state.default_img!== this.state.enemies_name)\r\n        )\r\n      {\r\n          Wordpress.tampols({\r\n              email : this.props.user.data.user_email,\r\n              enemies_name : this.state.enemies_name\r\n          })\r\n      }\r\n  }\r\n\r\n  changeImage = (e)=>{\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    if(e.target.files[0]=== null ){\r\n      return false\r\n    }\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        enemies_img: reader.result,\r\n        slapCount : 0\r\n      });\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n    this.slap()\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"container-fluid\">\r\n         <ModalRegister display={this.state.displayRegister}/>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n                <h4 className=\"text-center slap-counter\">\r\n                    \"Tampol\" Counter : \r\n                </h4>\r\n                <h1 className=\"text-center\">{this.state.slapCount}</h1>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"animation-target\" onClick={this.slap}>    \r\n                    <img \r\n                    style={{display:this.state.handImageDisplay}}\r\n                    alt=\"HandSlap\"\r\n                    src={this.state.slapImg}>\r\n                    </img>\r\n                </div>\r\n               \r\n                <div className=\"card\" >\r\n                  <div className=\"card-body enemy-image\">\r\n                    <div className=\"card-img-overlay\" onClick={this.slap}>\r\n                      <h5 className=\"card-title\">\r\n                        {this.state.enemies_name}\r\n                      </h5>\r\n                      <div className=\"watermark\">\r\n                        <p> <span>{this.state.userName}</span></p>\r\n                      </div>\r\n                    </div>\r\n                     <img \r\n                      className=\"card-img enemy-foto\" \r\n                      src={this.state.enemies_img}\r\n                      alt=\"EnemyFoto\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                      <label className=\"label-file-upload\"  htmlFor=\"upload-file\"> Upload File</label>\r\n                      <input \r\n                      style     = {{display: 'none'}} \r\n                      type      = 'file' id=\"upload-file\" \r\n                      className = \"upload-file\"\r\n                      accept    = \"image/*\"\r\n                      onChange  = {(e)=>this.changeImage(e)}\r\n                      />\r\n                      \r\n                      <input \r\n                      onKeyUp     = {(e)=>this.enterName(e)} \r\n                      placeholder = \"Insert your enemies name\" \r\n                      className   = \"form-control input-lg\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <button \r\n                    className = \"btn btn-block btn-danger btn-lg btn-tampol\" \r\n                    onClick   = {this.slap}>\r\n                      Tampols It Baby!!!\r\n                  </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <ModalWejangan></ModalWejangan>\r\n              <LastTampol data={this.state.recently}/>\r\n              {/* <Peacefull songVideo={this.state.songVideo} quoteStyle={this.state.quoteStyle} /> */}\r\n            </div>\r\n          </div>\r\n          <Footer></Footer>\r\n      </div>\r\n    \r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst stateToProps = state =>{\r\n  return state\r\n}\r\nexport default connect(stateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nimport { combineReducers} from 'redux'\r\nconst getUser = (lastdata =[], params)=>{\r\n\r\n    if(params.type  === 'USER'){\r\n        return params.payload\r\n    }\r\n    return lastdata\r\n\r\n}\r\n\r\nconst reducer  = combineReducers({\r\n    user : getUser\r\n})\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport reducer from './reducer'\n\nReactDOM.render(\n    <Provider store ={createStore(reducer)}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}