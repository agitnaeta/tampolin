{"version":3,"sources":["services/Wordpress.js","component/ModalRegister.js","actioncreator/index.js","component/Peacefull.js","component/LastTampol.js","App.js","serviceWorker.js","reducer/index.js","index.js"],"names":["server","process","register","params","a","request","Axios","method","data","url","Promise","resolve","tampols","recently","ModalRegister","props","checkingEmail","email","localStorage","getItem","setState","show","logedIn","sla","createSession","Wordpress","code","setItem","inputUser","handleClose","responseGoogle","googleUser","profile","getBasicProfile","name","getName","profile_picture","getImageUrl","getEmail","token_id","getId","state","this","Modal","backdrop","id","onHide","Body","className","clientId","buttonText","onSuccess","onFailure","cookiePolicy","href","React","Component","connect","type","payload","Peacefull","title","width","height","src","songVideo","frameBorder","allow","style","display","quoteStyle","LastTampol","paddingTop","map","v","i","key","post_title","post_date_gmt","App","enterName","e","enemies_name","target","value","enterLink","enemies_img","slap","play","bounce","Bounce","Audio","audioUrl","translate","from","x","y","to","duration","scale","applyTo","document","querySelectorAll","lastSlap","slapCount","handImageDisplay","default_img","user","user_email","changeImage","preventDefault","reader","FileReader","files","file","onloadend","result","readAsDataURL","slapImg","userName","getRecently","then","displayRegister","onClick","alt","htmlFor","onChange","onKeyUp","placeholder","undefined","Boolean","window","location","hostname","match","reducer","combineReducers","lastdata","ReactDOM","render","store","createStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5195107c.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst server = process.env.REACT_APP_SERVER\r\n\r\nexport const register = async (params)=>{\r\n    let request = Axios({\r\n        method : \"POST\",\r\n        data : params, \r\n        url : server +'/wp-json/rest-user/register'\r\n    })\r\n\r\n    return Promise.resolve(request)\r\n}\r\n\r\nexport const tampols = async (params)=>{\r\n    let request = Axios({\r\n        method : \"POST\",\r\n        data : params, \r\n        url : server +'/wp-json/rest-user/tampols'\r\n    })\r\n\r\n    return Promise.resolve(request)\r\n}\r\n\r\nexport const recently = async ()=>{\r\n    let request = Axios({\r\n        method : \"GET\",\r\n        url : server +'/wp-json/tampol-online/recently-got-tampols'\r\n    })\r\n\r\n    return Promise.resolve(request)\r\n}","import  React  from 'react'\r\nimport {Modal} from 'react-bootstrap'\r\n// import FacebookLogin from 'react-facebook-login'\r\nimport GoogleLogin from 'react-google-login';\r\nimport * as Wordpress from '../services/Wordpress.js'\r\nimport {connect} from 'react-redux'\r\nimport {inputUser} from '../actioncreator'\r\n\r\n\r\n\r\nclass ModalRegister extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={\r\n      show : true,\r\n      logedIn: false,\r\n      sla : ''\r\n    }\r\n  }\r\n\r\n \r\n\r\n  componentDidMount(){\r\n    this.checkingEmail()\r\n  }\r\n\r\n  checkingEmail = ()=> {\r\n    let email = localStorage.getItem(\"email\")\r\n    if(email===null){\r\n      this.setState({\r\n        show : true,\r\n        logedIn: false,\r\n        sla : process.env.REACT_APP_SLA\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        show : false,\r\n        logedIn: true,\r\n        sla : process.env.REACT_APP_SLA\r\n      })\r\n      this.createSession(email)\r\n    }\r\n  }\r\n  \r\n  createSession= async (email)=>{\r\n    let register = await Wordpress.register({\r\n      email : email,\r\n    })\r\n\r\n    if(register.data.code === 1000){\r\n      this.setState({\r\n          logedIn : true, \r\n          show: false\r\n      })\r\n    }\r\n    await localStorage.setItem(\"email\",email)\r\n    this.props.inputUser(register.data.data)\r\n  }\r\n  handleClose = () => {\r\n    this.setState({\r\n      show : false,\r\n    })\r\n  };\r\n  \r\n  responseGoogle = async (googleUser)=>{\r\n    let profile = googleUser.getBasicProfile()\r\n    let register = await Wordpress.register({\r\n      name  : profile.getName(),\r\n      profile_picture : profile.getImageUrl(),\r\n      email : profile.getEmail(),\r\n      token_id :profile.getId()\r\n    })\r\n\r\n    if(register.data.code === 1000){\r\n      this.setState({\r\n          logedIn : true, \r\n          show: false\r\n      })\r\n    }\r\n    await localStorage.setItem(\"email\",profile.getEmail())\r\n    this.props.inputUser(register.data.data)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Modal backdrop={'static'} id=\"register-modal\" show={this.state.show} onHide={this.handleClose}>\r\n        \r\n          <Modal.Body>\r\n              <div>\r\n                <h5> Login \"Tampol Online\" </h5>\r\n\r\n                <div className=\"form-group group-register\">\r\n            \r\n                <GoogleLogin\r\n                    className=\"btn-block btn-primary\"\r\n                    clientId=\"1065136493014-ql91q7uefodnpjcholluphl1353pq4dp.apps.googleusercontent.com\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess={this.responseGoogle}\r\n                    onFailure={this.responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n            \r\n               \r\n\r\n            \r\n                  <p className=\"group-register text-center\">\r\n                    Degan login saya menyetujui \r\n                    <a href={this.state.sla}> Term And Sevices </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\nconst mapStateToProps = (state)=>{\r\n  return state\r\n}\r\nexport default connect(mapStateToProps,{inputUser})(ModalRegister)","\r\n\r\nexport const inputUser = (params)=>{\r\n    return {\r\n        type : 'USER',\r\n        payload : params\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function Peacefull(props){\r\n    return(\r\n        <div>\r\n                <iframe \r\n                    title       = \"song\"\r\n                    width       = \"100%\" height=\"300px\" src={props.songVideo}\r\n                    frameBorder = \"0\"\r\n                    allow       = \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n                />\r\n                <p className=\"text-muted text-center\" style={{display : props.quoteStyle}}>\r\n                    I offer you peace, I offer you love, I offer you friendship. I see your beauty, I hear your need, I feel your feelings. My wisdom flows from the highest source. I salute that Source in you. Let us work together for unity and peace \r\n                    <span>- Mahatma Gandhi</span>\r\n                </p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function LastTampol(props){\r\n    \r\n   return (\r\n    <div style={{paddingTop:\"20px\"}}>\r\n        <p className=\"text-center\"> Recently got \"tampol\"</p>\r\n        <ul className=\"list-group list-group-flush\">\r\n            {props.data.map((v,i)=>\r\n                <li className=\"list-group-item\" key={i}>\r\n                     {v.post_title} @ {v.post_date_gmt}\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </div>\r\n   )\r\n   \r\n}","import React from 'react';\r\nimport './App.css';\r\nimport * as Bounce from 'bounce.js'\r\nimport ModalRegister from './component/ModalRegister';\r\nimport {connect} from 'react-redux'\r\nimport * as Wordpress from './services/Wordpress.js'\r\nimport Peacefull from './component/Peacefull';\r\nimport LastTampol from './component/LastTampol';\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      play : false,\r\n      audioUrl :'', \r\n      slapImg : '',\r\n      slapCount : 0,\r\n      enemies_name :'',\r\n      enemies_img :'',\r\n      songVideo:'',\r\n      quoteStyle:'',\r\n      handImageDisplay : '',\r\n      userName : false,\r\n      recently :[]\r\n    }\r\n  }\r\n\r\n\r\n  static getDerivedStateFromProps(props,state){\r\n     \r\n      if(props.user.data !== undefined){\r\n        state.userName  = 'Tampoled by: '+props.user.data.user_email \r\n        return state\r\n      }\r\n      return true\r\n  }\r\n\r\n\r\n\r\n  componentDidMount(){\r\n\r\n   \r\n    this.setState({\r\n      audioUrl : process.env.REACT_APP_SRC +\"/slap.wav\",\r\n      slapImg : process.env.REACT_APP_SRC +\"/slap.png\",\r\n      enemies_img :'https://www.w3schools.com/bootstrap4/img_avatar3.png',\r\n      default_img : 'https://www.w3schools.com/bootstrap4/img_avatar3.png',\r\n      quoteStyle : 'none',\r\n      handImageDisplay : 'none',\r\n      enemies_name :'Click Image For \"Tampol\"',\r\n      userName : '',\r\n      recently :[],\r\n    })\r\n    this.getRecently()\r\n    \r\n  }\r\n\r\n  getRecently(){\r\n      Wordpress.recently().then((data)=>{\r\n       this.setState({\r\n          recently:data.data\r\n       })\r\n      })\r\n\r\n  }\r\n  \r\n  enterName = (e)=>{\r\n    this.setState({\r\n      enemies_name : e.target.value\r\n    })\r\n  }\r\n  enterLink = (e) =>{\r\n    this.setState({\r\n      enemies_img : e.target.value\r\n    })\r\n  }\r\n  slap =()=> {\r\n      this.setState({\r\n        play : true\r\n      })\r\n      let bounce = new Bounce();\r\n      let audio = new Audio(this.state.audioUrl)\r\n      audio.play()\r\n      bounce.translate({\r\n        from: { x: -300, y: 50 },\r\n        to: { x: 0, y: 0 },\r\n        duration : 50,\r\n      })\r\n      .scale({\r\n        from  : {x:1 ,y:5},\r\n        to  : {x:1,y:1},\r\n      })\r\n      .applyTo(document.querySelectorAll(\".animation-target\"));\r\n      let lastSlap = this.state.slapCount ;\r\n\r\n      this.setState({\r\n          slapCount : lastSlap+1\r\n      })\r\n      if(this.state.slapCount > -1){\r\n          this.setState({\r\n            handImageDisplay : 'block'\r\n          })\r\n      }\r\n      if(this.state.slapCount > 30){\r\n        this.setState({\r\n          songVideo:  \"https://www.youtube.com/embed/91dhAgsc01M?autoplay=1\",\r\n          quoteStyle : 'block'\r\n        })\r\n      }\r\n\r\n      if(this.state.slapCount === 1 && \r\n          (this.state.default_img!== this.state.enemies_name)\r\n        )\r\n      {\r\n          Wordpress.tampols({\r\n              email : this.props.user.data.user_email,\r\n              enemies_name : this.state.enemies_name\r\n          })\r\n      }\r\n  }\r\n\r\n  changeImage = (e)=>{\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    if(e.target.files[0]=== null ){\r\n      return false\r\n    }\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        enemies_img: reader.result,\r\n        slapCount : 0\r\n      });\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n    this.slap()\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"container-fluid\">\r\n         <ModalRegister display={this.state.displayRegister}/>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n                <h4 className=\"text-center slap-counter\">\r\n                    \"Tampol\" Counter : \r\n                </h4>\r\n                <h1 className=\"text-center\">{this.state.slapCount}</h1>\r\n              \r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"animation-target\" onClick={this.slap}>    \r\n                    <img \r\n                    style={{display:this.state.handImageDisplay}}\r\n                    alt=\"HandSlap\"\r\n                    src={this.state.slapImg}>\r\n                    </img>\r\n                </div>\r\n               \r\n                <div className=\"card\" >\r\n                  <div className=\"card-body enemy-image\">\r\n                    <div className=\"card-img-overlay\" onClick={this.slap}>\r\n                      <h5 className=\"card-title\">\r\n                        {this.state.enemies_name}\r\n                      </h5>\r\n                      <div className=\"watermark\">\r\n\r\n                        <p> <span>{this.state.userName}</span></p>\r\n                      </div>\r\n                    </div>\r\n                     <img \r\n                      className=\"card-img enemy-foto\" \r\n                      src={this.state.enemies_img}\r\n                      alt=\"EnemyFoto\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                      <label className=\"label-file-upload\"  htmlFor=\"upload-file\"> Upload File</label>\r\n                      <input \r\n                      style     = {{display: 'none'}} \r\n                      type      = 'file' id=\"upload-file\" \r\n                      className = \"upload-file\"\r\n                      onChange  = {(e)=>this.changeImage(e)}\r\n                      />\r\n                      \r\n                      <input \r\n                      onKeyUp     = {(e)=>this.enterName(e)} \r\n                      placeholder = \"Insert your enemies name\" \r\n                      className   = \"form-control input-lg\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <button \r\n                    className = \"btn btn-block btn-danger btn-lg btn-tampol\" \r\n                    onClick   = {this.slap}>\r\n                      Tampols It Baby!!!\r\n                  </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <LastTampol data={this.state.recently}/>\r\n              <Peacefull songVideo={this.state.songVideo} quoteStyle={this.state.quoteStyle} />\r\n            </div>\r\n          </div>\r\n          <div className=\"row text-center\">\r\n              <div className=\"col-md-12 navbar text-white fixed-bottom navbar-expand-sm navbar-dark bg-dark\">\r\n              Tampolin - 2019 by  :  \r\n              <a href=\"https://www.youtube.com/agitnaeta\"> @agitnaeta\r\n              </a>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    \r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst stateToProps = state =>{\r\n  return state\r\n}\r\nexport default connect(stateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nimport { combineReducers} from 'redux'\r\nconst getUser = (lastdata =[], params)=>{\r\n\r\n    if(params.type  === 'USER'){\r\n        return params.payload\r\n    }\r\n    return lastdata\r\n\r\n}\r\n\r\nconst reducer  = combineReducers({\r\n    user : getUser\r\n})\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport reducer from './reducer'\n\nReactDOM.render(\n    <Provider store ={createStore(reducer)}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}